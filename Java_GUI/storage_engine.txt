    Το πρώτο εμπόδιο που προέκυψε, όταν ορίσαμε το ENGINE = Memory στον πίνακα reservation_offers, ήταν το σφάλμα: ERROR 1114 (HY000): The table ‘reservation_offers’ is full. 
Αυτό είχε ως αποτέλεσμα να μην μπορούμε να δημιουργήσουμε indexes για τον πίνακα, σε περίπτωση που είχαμε αποθηκεύσει τις εγγραφές πριν τη δημιουργία των indexes, ή να μην μπορεί
να αποθηκεύσει όλες τις εγγραφές που θέλαμε (και τις 60.000) και ακόμα να τις διαγράφει όταν κάναμε restart στην βάση. 
   
    Αφού είχαμε αρχικοποιήσει τους indexes για τον πίνακα και εισάγαμε σε αυτόν όσα records μπορούσε να πάρει, θέλαμε να δούμε τι χώρο καταλαμβάνουν τα δεδομένα μέχρι στιγμής,
ώστε να έχουμε μια εικόνα για το πόση επέκταση θα κάνουμε στο χώρο του πίνακα. Για να δούμε το χώρο που καταλαμβάνει κάθε πίνακας στη βάση δεδομένων μας τρέξαμε την παρακάτω εντολή:

-> SELECT TABLE_NAME,ROUND(SUM(DATA_LENGTH + INDEX_LENGTH) / 1024 / 1024, 2) AS 'Table Size (MB)' FROM information_schema.create_tables
-> WHERE TABLE_SCHEMA = 'project' GROUP BY TABLE_NAME ORDER BY 'Table Size (MB)' DESC;

Έξοδος:
+--------------------+----------------+
| TABLE_NAME         | Table size(MB) |
+--------------------+----------------+
| admin              |           0.02 |
| blacklist          |           0.02 |
| branch             |           0.02 |
| destination        |           0.03 |
| driver             |           0.02 |
| event              |           0.02 |
| guide              |           0.02 |
| it                 |           0.02 |
| it_logs            |           0.02 |
| languages          |           0.02 |
| manages            |           0.03 |
| misconducts        |           0.02 |
| offers             |           0.03 |
| phones             |           0.02 |
| reservation        |           0.02 |
| reservation_offers |           9.58 |
| travel_to          |           0.03 |
| trip               |           0.06 |
| worker             |           0.03 |
+--------------------+----------------+
19 rows in set (0.147 sec)


    Προκειμένου να αυξήσουμε τον επιτρεπτό χώρο που μπορεί να καταλαμβάνει κάθε πίνακας με ENGINE = Memory, κάναμε τα εξής βήματα:
1. Ανοίξαμε ενα τερματικό από XAMPP Control Panel και πήγαμε στο φάκελο mysql\bin: 
# cd mysql\bin

2. Εκεί βρίσκεται το MariaDB configuration file 'my.ini'. Ανοίγουμε το αρχείο (start notepad my.ini) και προσθέτουμε/τροποποιούμε κάτω απο το τμήμα [mysqld] τη μεταβλητή: max_heap_table_size = 64M.
Ορίζουμε ως μέγιστο επιτρεπτό μέγεθος πίνακας δηλαδή τα 64Mb. Η επιλογή των 64Mb είναι λίγο υπερβολική, δεδομένου οτι το ERROR που προκύπτει, λογικά προκύπτει λόγω ανεπάρκειας μερικών Mb, αλλά απο 
τη στιγμή που υπάρχει κάποια άλλη αυστηρή απαίτηση σε χώρο μπορούμε να κάνουμε αυτή την παραχώριση.

    Μετά απο αυτά τα βήματα, ο πίνακας δέχτηκε κανονικά όλες τις εγγραφές που εισάγαμε (και τις 60.000), καθώς και τα indexes.

MariaDB [example]> call get_Res_Offers_Names(50,70);
+------+-------------+--------------------+-------+-----------------+-----------------+---------+------+------+-----------------------------+
| id   | select_type | table              | type  | possible_keys   | key             | key_len | ref  | rows | Extra                       |
+------+-------------+--------------------+-------+-----------------+-----------------+---------+------+------+-----------------------------+
|    1 | SIMPLE      | reservation_offers | range | idx_advance_fee | idx_advance_fee | 4       | NULL | 7939 | Using where; Using filesort |
+------+-------------+--------------------+-------+-----------------+-----------------+---------+------+------+-----------------------------+
1 row in set (0.003 sec)

Query OK, 0 rows affected (0.008 sec)

MariaDB [example]> call get_Res_Offers_Names(50,80);
+------+-------------+--------------------+-------+-----------------+-----------------+---------+------+-------+-----------------------------+
| id   | select_type | table              | type  | possible_keys   | key             | key_len | ref  | rows  | Extra                       |
+------+-------------+--------------------+-------+-----------------+-----------------+---------+------+-------+-----------------------------+
|    1 | SIMPLE      | reservation_offers | range | idx_advance_fee | idx_advance_fee | 4       | NULL | 11184 | Using where; Using filesort |
+------+-------------+--------------------+-------+-----------------+-----------------+---------+------+-------+-----------------------------+
1 row in set (0.001 sec)

Query OK, 0 rows affected (0.006 sec)

MariaDB [example]> call get_Res_Offers_Names(50,100);
+------+-------------+--------------------+-------+-----------------+-----------------+---------+------+-------+-----------------------------+
| id   | select_type | table              | type  | possible_keys   | key             | key_len | ref  | rows  | Extra                       |
+------+-------------+--------------------+-------+-----------------+-----------------+---------+------+-------+-----------------------------+
|    1 | SIMPLE      | reservation_offers | range | idx_advance_fee | idx_advance_fee | 4       | NULL | 18024 | Using where; Using filesort |
+------+-------------+--------------------+-------+-----------------+-----------------+---------+------+-------+-----------------------------+
1 row in set (0.000 sec)

Query OK, 0 rows affected (0.006 sec)

MariaDB [example]> call get_Res_Offers_Names(50,150);
+------+-------------+--------------------+-------+-----------------+-----------------+---------+------+-------+-----------------------------+
| id   | select_type | table              | type  | possible_keys   | key             | key_len | ref  | rows  | Extra                       |
+------+-------------+--------------------+-------+-----------------+-----------------+---------+------+-------+-----------------------------+
|    1 | SIMPLE      | reservation_offers | range | idx_advance_fee | idx_advance_fee | 4       | NULL | 41055 | Using where; Using filesort |
+------+-------------+--------------------+-------+-----------------+-----------------+---------+------+-------+-----------------------------+
1 row in set (0.000 sec)

Query OK, 0 rows affected (0.007 sec)

MariaDB [example]> call get_Res_Offers_Names(50,200);
+------+-------------+--------------------+------+-----------------+------+---------+------+-------+-----------------------------+
| id   | select_type | table              | type | possible_keys   | key  | key_len | ref  | rows  | Extra                       |
+------+-------------+--------------------+------+-----------------+------+---------+------+-------+-----------------------------+
|    1 | SIMPLE      | reservation_offers | ALL  | idx_advance_fee | NULL | NULL    | NULL | 60000 | Using where; Using filesort |
+------+-------------+--------------------+------+-----------------+------+---------+------+-------+-----------------------------+
1 row in set (0.001 sec)