Στο create_tables.txt η create για το table reservation_offers βρίσκεται στο τέλος. Επίσης οι procedures για το ερώτημα 3.1.3.4 είναι οι δύο τελευταίες
στο αρχείο procedures.txt. Στο αρχείο reservation_offers_names.txt βρίσκονται τα στοιχεία που κάνω insert στον πίνακα reservation_offers και το .py
αρχείο περιέχει τον κώδικα που έγραψα για να παράξω τα στοιχεία απο τα δωσμένα ονόματα που έχετε ανεβάσει στο eclass. 

Ερώτημα 3.1.3.4
    Η διαφορά που παρατηρώ (με τους περιορισμούς που αναφέρω παρακάτω για τις τιμές εισόδου στην procedure get_Res_Offers_Names), είναι της τάξης των ~3 δευτερολέπτων.
Δεν ξέρω αν αυτή είναι η αναμενόμενη διαφορά, γιατί στο β) ερώτημα με χρήση index ο χρόνος εξόδου της procedure μειώνεται πάνω απο 5 φορές του χρόνου χωρίς index. Παραθέτω 
και για αυτή παρακάτω τα αποτελέσματά που παίρνω. 

α) 
Έξοδος get_Res_Offers_Names χωρίς index (παραλείπω τα ονόματα που επιστρέφει): 

Call get_Res_Offers_Names(50,70);
...
8073 rows in set (0.017 sec)

Query OK, 0 rows affected (11.823 sec)


Έξοδος get_Res_Offers_Names με index (παραλείπω τα ονόματα που επιστρέφει):

call get_Res_Offers_Names(50,70);
...
8073 rows in set (0.105 sec)

Query OK, 0 rows affected (9.150 sec)


Έξοδος get_Res_Offers_Names με explain και index:
call get_Res_Offers_Names(50,70);
+------+-------------+--------------------+-------+---------------+-------+---------+------+------+-----------------------+
| id   | select_type | table              | type  | possible_keys | key   | key_len | ref  | rows | Extra                 |
+------+-------------+--------------------+-------+---------------+-------+---------+------+------+-----------------------+
|    1 | SIMPLE      | reservation_offers | range | money         | money | 4       | NULL | 8073 | Using index condition |
+------+-------------+--------------------+-------+---------------+-------+---------+------+------+-----------------------+
1 row in set (0.002 sec)

Query OK, 0 rows affected (0.008 sec)

Στο συγκεκριμένο procedure δείχνει οτι χρησιμοποιεί τον index money για εύρος τιμών εισόδου με διαφορά μικρότερη ή ίση του 24. Για εισόδους με μεγαλύτερη διαφορά απλά 
χρησιμοποιεί τη WHERE μέσα στη select και περνάει όλο τον πίνακα:

call get_Res_Offers_Names(50,74);
+------+-------------+--------------------+-------+---------------+-------+---------+------+------+-----------------------+
| id   | select_type | table              | type  | possible_keys | key   | key_len | ref  | rows | Extra                 |
+------+-------------+--------------------+-------+---------------+-------+---------+------+------+-----------------------+
|    1 | SIMPLE      | reservation_offers | range | money         | money | 4       | NULL | 9595 | Using index condition |
+------+-------------+--------------------+-------+---------------+-------+---------+------+------+-----------------------+
1 row in set (0.000 sec)

Query OK, 0 rows affected (0.005 sec)

call get_Res_Offers_Names(50,75);
+------+-------------+--------------------+------+---------------+------+---------+------+-------+-------------+
| id   | select_type | table              | type | possible_keys | key  | key_len | ref  | rows  | Extra       |
+------+-------------+--------------------+------+---------------+------+---------+------+-------+-------------+
|    1 | SIMPLE      | reservation_offers | ALL  | money         | NULL | NULL    | NULL | 59966 | Using where |
+------+-------------+--------------------+------+---------------+------+---------+------+-------+-------------+
1 row in set (0.000 sec)

Query OK, 0 rows affected (0.005 sec)



β) Για το procedure αυτού του ερωτήματος παρατηρώ πολύ μεγάλη διαφορά στο χρόνο εξόδου με index.
Έξοδος χωρίς index:

call get_offers_participation("Backley");
+-----------------+--------------+
| trip_offer_code | total_people |
+-----------------+--------------+
|            8001 |            2 |
|            8002 |            2 |
|            8003 |            2 |
+-----------------+--------------+
3 rows in set (0.083 sec)

Query OK, 1 row affected (0.094 sec)


Έξοδος με index στο cust_lname (BTREE επίσης γιατί με FULLTEXT η βελτίωση στο χρόνο είναι αμελητέα σε σχέση με το BTREE):
call get_offers_participation("Backley");
+-----------------+--------------+
| trip_offer_code | total_people |
+-----------------+--------------+
|            8001 |            2 |
|            8002 |            2 |
|            8003 |            2 |
+-----------------+--------------+
3 rows in set (0.001 sec)

Query OK, 1 row affected (0.015 sec)

Έξοδος με FULLTEXT index στο cust_lname:
call get_offers_participation("Backley");
+-----------------+--------------+
| trip_offer_code | total_people |
+-----------------+--------------+
|            8001 |            2 |
|            8002 |            2 |
|            8003 |            2 |
+-----------------+--------------+
3 rows in set (0.067 sec)

Query OK, 1 row affected (0.076 sec)